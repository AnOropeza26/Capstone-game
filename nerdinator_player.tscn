[gd_scene load_steps=31 format=3 uid="uid://b31kjqxxmrxq0"]

[ext_resource type="Script" path="res://PlayerMovementData.gd" id="1_40ogp"]
[ext_resource type="AudioStream" uid="uid://by8kptb4mhqhf" path="res://Jump sound.mp3" id="2_0pbo4"]
[ext_resource type="AudioStream" uid="uid://cb8y5rkj188r1" path="res://Bomb explosion.mp3" id="3_5nw3o"]
[ext_resource type="Texture2D" uid="uid://dqi4wr1t8nmre" path="res://soul.png" id="4_7xbyr"]
[ext_resource type="Texture2D" uid="uid://dtxb1xpo5a4tk" path="res://1000014177.png" id="5_lue0k"]
[ext_resource type="Texture2D" uid="uid://d1mmt5umud7xo" path="res://PlayerNerdinator-Sheet-export.png" id="6_pgvsi"]
[ext_resource type="Texture2D" uid="uid://cwg13atxegcji" path="res://NoBombMovement-Sheet.png" id="7_hkn1q"]

[sub_resource type="GDScript" id="GDScript_bm4dc"]
script/source = "extends CharacterBody2D


@export var movement_data : PlayerMovementData
 

var is_dying = false
var air_jump = false
var just_wall_jumped = false
var gravity = ProjectSettings.get_setting(\"physics/2d/default_gravity\")

@onready var animated_sprite_2d = $AnimatedSprite2D
@onready var coyote_jump_timer: Timer = $CoyoteJumpTimer
@onready var starting_position = global_position
@onready var death_timer: Timer = $DeathTimer

func _ready():
	death_timer.connect(\"timeout\", Callable(self, \"_on_DeathTimer_timeout\"))


func _physics_process(delta):
	if is_dying:
		return
	apply_gravity(delta) 
	handle_jump()
	handle_wall_jump()
	var input_axis := Input.get_axis(\"move_left\", \"move_right\") 
	handle_air_acceleration(input_axis, delta)
	handle_acceleration(input_axis, delta)
	apply_friction(input_axis, delta)
	apply_air_resistance(input_axis, delta)
	update_animations(input_axis)
	end_it_all()
	var was_on_floor = is_on_floor()
	move_and_slide() 
	var just_left_ledge = was_on_floor and not is_on_floor() and velocity.y >= 0
	if just_left_ledge:
		coyote_jump_timer.start()
	

func apply_gravity(delta): 
	if not is_on_floor():
		velocity.y += gravity * movement_data.gravity_scale * delta 
 
func handle_wall_jump():
	if is_on_floor(): return
	if not is_on_wall(): return
	var wall_normal = get_wall_normal()
	if Input.is_action_just_pressed(\"move_left\") and wall_normal == Vector2.LEFT:
		velocity.x = wall_normal.x * movement_data.speed 
		velocity.y = movement_data.jump_velocity * 0.8
	
		
	if Input.is_action_just_pressed(\"move_right\") and wall_normal == Vector2.RIGHT:
		velocity.x = wall_normal.x * movement_data.speed 
		velocity.y = movement_data.jump_velocity * 0.8
	


func handle_jump(): 
	if is_on_floor(): air_jump = true
	
	if  is_on_floor() or coyote_jump_timer.time_left > 0.0:
		if Input.is_action_just_pressed(\"jump\"): 
			velocity.y = movement_data.jump_velocity
	elif not is_on_floor(): 
		if Input.is_action_just_pressed(\"jump\") and velocity.y < movement_data.jump_velocity/ 2 : 
			velocity.y = movement_data.jump_velocity / 1.2 
		
		if Input.is_action_just_pressed(\"jump\") and air_jump:
			velocity.y = movement_data.jump_velocity * 0.8
			air_jump = false
		if Input.is_action_pressed(\"jump\"):
			$JumpSound.play()

func handle_acceleration(input_axis, delta): 
	if not is_on_floor(): return
	if input_axis != 0:
		velocity.x = move_toward(velocity.x, movement_data.speed * input_axis, movement_data.acceleration * delta)

func handle_air_acceleration(input_axis, delta):
	if is_on_floor(): return
	if input_axis != 0:
		velocity.x = move_toward(velocity.x, movement_data.speed * input_axis, movement_data.air_acceleration * delta)


func apply_friction(input_axis, delta): 
	if input_axis == 0 and is_on_floor(): 
		velocity.x = move_toward(velocity.x, 0, movement_data.friction * delta)

func apply_air_resistance(input_axis, delta):
	if input_axis == 0 and not is_on_floor():
		velocity.x = move_toward(velocity.x, 0, movement_data.air_resistance * delta)

func update_animations(input_axis):
	if is_dying:
		return
	if input_axis != 0:
		animated_sprite_2d.flip_h = (input_axis < 0)
		animated_sprite_2d.play(\"run\")
	else:
		animated_sprite_2d.play(\"idle\")
	
	if not is_on_floor():
		animated_sprite_2d.play(\"jump\")


func _on_hazard_detector_area_entered(area: Area2D) -> void:
	await die()
	on_DeathTimer_timeout()
	


func die():
	if is_dying:
		return
	is_dying = true
	animated_sprite_2d.play(\"die\")
	await move_player_up()
	smooth_transition()
	
func die_from_bomb():
	if is_dying:
		return
	is_dying = true
	animated_sprite_2d.play(\"explode\")
	$BombExplosion.play()
	
	

	


func smooth_transition():
	
	global_position = starting_position
	






func move_player_up():
	var starting_position = position
	var up_position = starting_position + Vector2(0, -150)
	
	while position.y > up_position.y:
		position.y -= 4
		await get_tree().create_timer(0.01).timeout

func on_DeathTimer_timeout():
	await  smooth_transition()
	if starting_position and is_dying:
		get_tree().reload_current_scene()
	

func kaboom():
	pass


func _on_timer_timeout() -> void:
	die_from_bomb()
	


func _on_animated_sprite_2d_animation_finished() -> void:
	get_tree().change_scene_to_file(\"res://Game_Over.tscn\")


func end_it_all():
	if Input.is_action_just_pressed(\"u_die\"):
		die_from_bomb()


func _on_other_hazard_detector_area_entered(area: Area2D) -> void:
	die_from_bomb()
"

[sub_resource type="Resource" id="Resource_xvloe"]
script = ExtResource("1_40ogp")
speed = 175.0
acceleration = 900.0
jump_velocity = -285.0
friction = 4e+06
gravity_scale = 1.0
air_resistance = 400.0
air_acceleration = 800.0

[sub_resource type="AtlasTexture" id="AtlasTexture_bot1p"]
atlas = ExtResource("4_7xbyr")
region = Rect2(0, 0, 1280, 640)

[sub_resource type="AtlasTexture" id="AtlasTexture_jg6gs"]
atlas = ExtResource("5_lue0k")
region = Rect2(0, 0, 1280, 1280)

[sub_resource type="AtlasTexture" id="AtlasTexture_dj8d2"]
atlas = ExtResource("5_lue0k")
region = Rect2(1280, 0, 1280, 1280)

[sub_resource type="AtlasTexture" id="AtlasTexture_5gp8b"]
atlas = ExtResource("5_lue0k")
region = Rect2(2560, 0, 1280, 1280)

[sub_resource type="AtlasTexture" id="AtlasTexture_wgo2f"]
atlas = ExtResource("6_pgvsi")
region = Rect2(0, 0, 640, 640)

[sub_resource type="AtlasTexture" id="AtlasTexture_3le0s"]
atlas = ExtResource("7_hkn1q")
region = Rect2(7040, 0, 640, 640)

[sub_resource type="AtlasTexture" id="AtlasTexture_j3cg7"]
atlas = ExtResource("7_hkn1q")
region = Rect2(0, 0, 640, 640)

[sub_resource type="AtlasTexture" id="AtlasTexture_78qb4"]
atlas = ExtResource("7_hkn1q")
region = Rect2(640, 0, 640, 640)

[sub_resource type="AtlasTexture" id="AtlasTexture_g5jb2"]
atlas = ExtResource("7_hkn1q")
region = Rect2(1280, 0, 640, 640)

[sub_resource type="AtlasTexture" id="AtlasTexture_rjbkn"]
atlas = ExtResource("7_hkn1q")
region = Rect2(1920, 0, 640, 640)

[sub_resource type="AtlasTexture" id="AtlasTexture_xp33t"]
atlas = ExtResource("7_hkn1q")
region = Rect2(2560, 0, 640, 640)

[sub_resource type="AtlasTexture" id="AtlasTexture_3tmxj"]
atlas = ExtResource("7_hkn1q")
region = Rect2(3200, 0, 640, 640)

[sub_resource type="AtlasTexture" id="AtlasTexture_g8ps7"]
atlas = ExtResource("7_hkn1q")
region = Rect2(3840, 0, 640, 640)

[sub_resource type="AtlasTexture" id="AtlasTexture_irg5a"]
atlas = ExtResource("7_hkn1q")
region = Rect2(4480, 0, 640, 640)

[sub_resource type="AtlasTexture" id="AtlasTexture_yw3tj"]
atlas = ExtResource("7_hkn1q")
region = Rect2(5120, 0, 640, 640)

[sub_resource type="AtlasTexture" id="AtlasTexture_x5xuj"]
atlas = ExtResource("7_hkn1q")
region = Rect2(5760, 0, 640, 640)

[sub_resource type="AtlasTexture" id="AtlasTexture_xew83"]
atlas = ExtResource("7_hkn1q")
region = Rect2(6400, 0, 640, 640)

[sub_resource type="SpriteFrames" id="SpriteFrames_lhb2p"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_bot1p")
}],
"loop": true,
"name": &"die",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_jg6gs")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_dj8d2")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_5gp8b")
}],
"loop": false,
"name": &"explode",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_wgo2f")
}],
"loop": true,
"name": &"idle",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_3le0s")
}],
"loop": true,
"name": &"jump",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_j3cg7")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_78qb4")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_g5jb2")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_rjbkn")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_xp33t")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_3tmxj")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_g8ps7")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_irg5a")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_yw3tj")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_x5xuj")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_xew83")
}],
"loop": true,
"name": &"run",
"speed": 12.0
}]

[sub_resource type="RectangleShape2D" id="RectangleShape2D_lg0ke"]
size = Vector2(20, 28)

[sub_resource type="RectangleShape2D" id="RectangleShape2D_xtcms"]
size = Vector2(10, 15)

[sub_resource type="RectangleShape2D" id="RectangleShape2D_5uytk"]
size = Vector2(14.5, 20)

[node name="NerdinatorPlayer" type="CharacterBody2D"]
scale = Vector2(0.7, 0.7)
collision_layer = 2
floor_constant_speed = true
floor_max_angle = 1.22173
floor_snap_length = 5.0
script = SubResource("GDScript_bm4dc")
movement_data = SubResource("Resource_xvloe")

[node name="JumpSound" type="AudioStreamPlayer" parent="."]
stream = ExtResource("2_0pbo4")
volume_db = -80.0

[node name="BombExplosion" type="AudioStreamPlayer" parent="."]
stream = ExtResource("3_5nw3o")
volume_db = 24.0

[node name="Camera2D" type="Camera2D" parent="."]
offset = Vector2(0, -30)
position_smoothing_enabled = true

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
position = Vector2(0, -20)
scale = Vector2(0.1, 0.099)
sprite_frames = SubResource("SpriteFrames_lhb2p")
animation = &"die"

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(0, -15)
shape = SubResource("RectangleShape2D_lg0ke")

[node name="CoyoteJumpTimer" type="Timer" parent="."]
wait_time = 0.2
one_shot = true

[node name="OtherHazardDetector" type="Area2D" parent="."]
scale = Vector2(1.42857, 1.42857)
collision_layer = 0
collision_mask = 8

[node name="CollisionShape2D" type="CollisionShape2D" parent="OtherHazardDetector"]
position = Vector2(0, -10.5)
shape = SubResource("RectangleShape2D_xtcms")
debug_color = Color(0.995147, 0, 0.210292, 0.42)

[node name="HazardDetector" type="Area2D" parent="."]
collision_layer = 0
collision_mask = 4

[node name="CollisionShape2D" type="CollisionShape2D" parent="HazardDetector"]
position = Vector2(0, -15)
shape = SubResource("RectangleShape2D_5uytk")
debug_color = Color(0, 0.623833, 0.186367, 0.42)

[node name="DeathTimer" type="Timer" parent="."]

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[connection signal="animation_finished" from="AnimatedSprite2D" to="." method="_on_animated_sprite_2d_animation_finished"]
[connection signal="area_entered" from="OtherHazardDetector" to="." method="_on_other_hazard_detector_area_entered"]
[connection signal="area_entered" from="HazardDetector" to="." method="_on_hazard_detector_area_entered"]
