[gd_scene load_steps=18 format=3 uid="uid://x5vhp4acp7vh"]

[ext_resource type="Resource" uid="uid://bj7jqgumi54rc" path="res://DefaultMovementData.tres" id="1_jkio6"]
[ext_resource type="Texture2D" uid="uid://bgmtvtyg1wqu1" path="res://Movement-Sheet.png" id="1_okksx"]

[sub_resource type="GDScript" id="GDScript_bm4dc"]
script/source = "extends CharacterBody2D


@export var movement_data : PlayerMovementData
 
var gravity = ProjectSettings.get_setting(\"physics/2d/default_gravity\")

@onready var animated_sprite_2d = $AnimatedSprite2D
@onready var coyote_jump_timer: Timer = $CoyoteJumpTimer


func _physics_process(delta):
	apply_gravity(delta) 
	handle_jump()
	var input_axis := Input.get_axis(\"ui_left\", \"ui_right\") 
	handle_acceleration(input_axis, delta)
	apply_friction(input_axis, delta)
	apply_air_resistance(input_axis, delta)
	update_animations(input_axis)
	var was_on_floor = is_on_floor()
	move_and_slide() 
	var just_left_ledge = was_on_floor and not is_on_floor() and velocity.y >= 0
	if just_left_ledge:
		coyote_jump_timer.start()
	

func apply_gravity(delta): 
	if not is_on_floor():
		velocity.y += gravity * movement_data.gravity_scale * delta 
 
func handle_jump(): 
	if  is_on_floor() or coyote_jump_timer.time_left > 0.0:
		if Input.is_action_just_pressed(\"ui_accept\"): 
			velocity.y = movement_data.jump_velocity
	if not is_on_floor(): 
		if Input.is_action_just_pressed(\"ui_accept\") and velocity.y < movement_data.jump_velocity/ 2 : 
			velocity.y = movement_data.jump_velocity / 1.2 
		
func handle_acceleration(input_axis, delta): 
	if input_axis != 0:
		velocity.x = move_toward(velocity.x, movement_data.speed * input_axis, movement_data.acceleration * delta)

func apply_friction(input_axis, delta): 
	if input_axis == 0 and is_on_floor(): 
		velocity.x = move_toward(velocity.x, 0, movement_data.friction * delta)

func apply_air_resistance(input_axis, delta):
	if input_axis == 0 and not is_on_floor():
		velocity.x = move_toward(velocity.x, 0, movement_data.air_resistance * delta)

func update_animations(input_axis):
	if input_axis != 0:
		animated_sprite_2d.flip_h = (input_axis < 0)
		animated_sprite_2d.play(\"run\")
	else:
		animated_sprite_2d.play(\"idle\")
	
	if not is_on_floor():
		animated_sprite_2d.play(\"jump\")
"

[sub_resource type="AtlasTexture" id="AtlasTexture_jxevx"]
atlas = ExtResource("1_okksx")
region = Rect2(3840, 0, 640, 640)

[sub_resource type="AtlasTexture" id="AtlasTexture_o6edt"]
atlas = ExtResource("1_okksx")
region = Rect2(7040, 0, 640, 640)

[sub_resource type="AtlasTexture" id="AtlasTexture_g8mq7"]
atlas = ExtResource("1_okksx")
region = Rect2(0, 0, 640, 640)

[sub_resource type="AtlasTexture" id="AtlasTexture_7g0cq"]
atlas = ExtResource("1_okksx")
region = Rect2(640, 0, 640, 640)

[sub_resource type="AtlasTexture" id="AtlasTexture_r68o3"]
atlas = ExtResource("1_okksx")
region = Rect2(1280, 0, 640, 640)

[sub_resource type="AtlasTexture" id="AtlasTexture_qn4ta"]
atlas = ExtResource("1_okksx")
region = Rect2(1920, 0, 640, 640)

[sub_resource type="AtlasTexture" id="AtlasTexture_kgfux"]
atlas = ExtResource("1_okksx")
region = Rect2(2560, 0, 640, 640)

[sub_resource type="AtlasTexture" id="AtlasTexture_lns8u"]
atlas = ExtResource("1_okksx")
region = Rect2(3200, 0, 640, 640)

[sub_resource type="AtlasTexture" id="AtlasTexture_1nl6u"]
atlas = ExtResource("1_okksx")
region = Rect2(4480, 0, 640, 640)

[sub_resource type="AtlasTexture" id="AtlasTexture_ubbwy"]
atlas = ExtResource("1_okksx")
region = Rect2(5120, 0, 640, 640)

[sub_resource type="AtlasTexture" id="AtlasTexture_ofxgp"]
atlas = ExtResource("1_okksx")
region = Rect2(5760, 0, 640, 640)

[sub_resource type="AtlasTexture" id="AtlasTexture_sun5t"]
atlas = ExtResource("1_okksx")
region = Rect2(6400, 0, 640, 640)

[sub_resource type="SpriteFrames" id="SpriteFrames_lhb2p"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_jxevx")
}],
"loop": true,
"name": &"idle",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_o6edt")
}],
"loop": true,
"name": &"jump",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_g8mq7")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_7g0cq")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_r68o3")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_qn4ta")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_kgfux")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_lns8u")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_1nl6u")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ubbwy")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ofxgp")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_sun5t")
}],
"loop": true,
"name": &"run",
"speed": 12.0
}]

[sub_resource type="RectangleShape2D" id="RectangleShape2D_0mxds"]
size = Vector2(20, 28)

[node name="Player" type="CharacterBody2D"]
floor_constant_speed = true
script = SubResource("GDScript_bm4dc")
movement_data = ExtResource("1_jkio6")

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
position = Vector2(0, -20)
scale = Vector2(0.1, 0.099)
sprite_frames = SubResource("SpriteFrames_lhb2p")
animation = &"run"
frame = 1
frame_progress = 0.572766

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(0, -14)
shape = SubResource("RectangleShape2D_0mxds")

[node name="CoyoteJumpTimer" type="Timer" parent="."]
wait_time = 0.2
one_shot = true
