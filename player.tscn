[gd_scene load_steps=52 format=3 uid="uid://dohhcpdikvwah"]

[ext_resource type="Resource" uid="uid://bj7jqgumi54rc" path="res://DefaultMovementData.tres" id="1_jkio6"]
[ext_resource type="Texture2D" uid="uid://bgmtvtyg1wqu1" path="res://Movement-Sheet.png" id="1_okksx"]
[ext_resource type="Texture2D" uid="uid://bysv5nm4l4esx" path="res://icon.svg" id="2_hgk5g"]
[ext_resource type="Texture2D" uid="uid://b21dhx1cdblfu" path="res://PlayerIdle-Sheet-export.png" id="3_mm24y"]
[ext_resource type="PackedScene" uid="uid://v5q8w864tuk" path="res://bombtimer.tscn" id="5_tpnx8"]

[sub_resource type="GDScript" id="GDScript_bm4dc"]
script/source = "extends CharacterBody2D


@export var movement_data : PlayerMovementData
 

var is_dying = false
var air_jump = false
var just_wall_jumped = false
var gravity = ProjectSettings.get_setting(\"physics/2d/default_gravity\")

@onready var animated_sprite_2d = $AnimatedSprite2D
@onready var coyote_jump_timer: Timer = $CoyoteJumpTimer
@onready var starting_position = global_position
@onready var death_timer: Timer = $DeathTimer

func _ready():
	death_timer.connect(\"timeout\", Callable(self, \"_on_DeathTimer_timeout\"))


func _physics_process(delta):
	if is_dying:
		return
	apply_gravity(delta) 
	handle_jump()
	handle_wall_jump()
	var input_axis := Input.get_axis(\"move_left\", \"move_right\") 
	handle_air_acceleration(input_axis, delta)
	handle_acceleration(input_axis, delta)
	apply_friction(input_axis, delta)
	apply_air_resistance(input_axis, delta)
	update_animations(input_axis)
	var was_on_floor = is_on_floor()
	move_and_slide() 
	var just_left_ledge = was_on_floor and not is_on_floor() and velocity.y >= 0
	if just_left_ledge:
		coyote_jump_timer.start()
	

func apply_gravity(delta): 
	if not is_on_floor():
		velocity.y += gravity * movement_data.gravity_scale * delta 
 
func handle_wall_jump():
	if is_on_floor(): return
	if not is_on_wall(): return
	var wall_normal = get_wall_normal()
	if Input.is_action_just_pressed(\"move_left\") and wall_normal == Vector2.LEFT:
		velocity.x = wall_normal.x * movement_data.speed 
		velocity.y = movement_data.jump_velocity * 0.8
	
		
	if Input.is_action_just_pressed(\"move_right\") and wall_normal == Vector2.RIGHT:
		velocity.x = wall_normal.x * movement_data.speed 
		velocity.y = movement_data.jump_velocity * 0.8
	


func handle_jump(): 
	if is_on_floor(): air_jump = true
	
	if  is_on_floor() or coyote_jump_timer.time_left > 0.0:
		if Input.is_action_just_pressed(\"jump\"): 
			velocity.y = movement_data.jump_velocity
	elif not is_on_floor(): 
		if Input.is_action_just_pressed(\"jump\") and velocity.y < movement_data.jump_velocity/ 2 : 
			velocity.y = movement_data.jump_velocity / 1.2 
		
		if Input.is_action_just_pressed(\"jump\") and air_jump:
			velocity.y = movement_data.jump_velocity * 0.8
			air_jump = false


func handle_acceleration(input_axis, delta): 
	if not is_on_floor(): return
	if input_axis != 0:
		velocity.x = move_toward(velocity.x, movement_data.speed * input_axis, movement_data.acceleration * delta)

func handle_air_acceleration(input_axis, delta):
	if is_on_floor(): return
	if input_axis != 0:
		velocity.x = move_toward(velocity.x, movement_data.speed * input_axis, movement_data.air_acceleration * delta)


func apply_friction(input_axis, delta): 
	if input_axis == 0 and is_on_floor(): 
		velocity.x = move_toward(velocity.x, 0, movement_data.friction * delta)

func apply_air_resistance(input_axis, delta):
	if input_axis == 0 and not is_on_floor():
		velocity.x = move_toward(velocity.x, 0, movement_data.air_resistance * delta)

func update_animations(input_axis):
	if is_dying:
		return
	if input_axis != 0:
		animated_sprite_2d.flip_h = (input_axis < 0)
		animated_sprite_2d.play(\"run\")
	else:
		animated_sprite_2d.play(\"idle\")
	
	if not is_on_floor():
		animated_sprite_2d.play(\"jump\")


func _on_hazard_detector_area_entered(area: Area2D) -> void:
	await die()
	on_DeathTimer_timeout()
	


func die():
	if is_dying:
		return
	is_dying = true
	animated_sprite_2d.play(\"die\")
	await move_player_up()
	smooth_transition()
	
func die_from_bomb():
	if is_dying:
		return
	is_dying = true
	animated_sprite_2d.play(\"explode\")
	
	
	

	


func smooth_transition():
	
	global_position = starting_position
	






func move_player_up():
	var starting_position = position
	var up_position = starting_position + Vector2(0, -150)
	
	while position.y > up_position.y:
		position.y -= 4
		await get_tree().create_timer(0.02).timeout

func on_DeathTimer_timeout():
	await  smooth_transition()
	if starting_position and is_dying:
		get_tree().reload_current_scene()
	

func kaboom():
	pass


func _on_timer_timeout() -> void:
	die_from_bomb()
	


func _on_animated_sprite_2d_animation_finished() -> void:
	get_tree().change_scene_to_file(\"res://Game_Over.tscn\")
"

[sub_resource type="AtlasTexture" id="AtlasTexture_k5an6"]
atlas = ExtResource("2_hgk5g")
region = Rect2(0, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_5b1hv"]
atlas = ExtResource("2_hgk5g")
region = Rect2(0, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_was4l"]
atlas = ExtResource("2_hgk5g")
region = Rect2(0, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_boqfy"]
atlas = ExtResource("2_hgk5g")
region = Rect2(0, 32, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_hl7wv"]
atlas = ExtResource("2_hgk5g")
region = Rect2(0, 64, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_g8hda"]
atlas = ExtResource("2_hgk5g")
region = Rect2(0, 96, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_v1o64"]
atlas = ExtResource("2_hgk5g")
region = Rect2(32, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_otamc"]
atlas = ExtResource("2_hgk5g")
region = Rect2(32, 32, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_hr2sv"]
atlas = ExtResource("2_hgk5g")
region = Rect2(32, 64, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_uja7o"]
atlas = ExtResource("2_hgk5g")
region = Rect2(32, 96, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_t6e3a"]
atlas = ExtResource("2_hgk5g")
region = Rect2(64, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_vvabb"]
atlas = ExtResource("2_hgk5g")
region = Rect2(64, 32, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_a8h2u"]
atlas = ExtResource("2_hgk5g")
region = Rect2(64, 64, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_g866q"]
atlas = ExtResource("2_hgk5g")
region = Rect2(64, 96, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_m5wmi"]
atlas = ExtResource("2_hgk5g")
region = Rect2(96, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_gfnlr"]
atlas = ExtResource("2_hgk5g")
region = Rect2(96, 32, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_pn54w"]
atlas = ExtResource("2_hgk5g")
region = Rect2(96, 64, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_axq03"]
atlas = ExtResource("2_hgk5g")
region = Rect2(96, 96, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_jxevx"]
atlas = ExtResource("1_okksx")
region = Rect2(3840, 0, 640, 640)

[sub_resource type="AtlasTexture" id="AtlasTexture_tu12j"]
atlas = ExtResource("3_mm24y")
region = Rect2(0, 0, 640, 640)

[sub_resource type="AtlasTexture" id="AtlasTexture_hxr28"]
atlas = ExtResource("3_mm24y")
region = Rect2(640, 0, 640, 640)

[sub_resource type="AtlasTexture" id="AtlasTexture_pnay4"]
atlas = ExtResource("3_mm24y")
region = Rect2(1280, 0, 640, 640)

[sub_resource type="AtlasTexture" id="AtlasTexture_8bjsl"]
atlas = ExtResource("3_mm24y")
region = Rect2(1920, 0, 640, 640)

[sub_resource type="AtlasTexture" id="AtlasTexture_h68ko"]
atlas = ExtResource("3_mm24y")
region = Rect2(2560, 0, 640, 640)

[sub_resource type="AtlasTexture" id="AtlasTexture_k7lra"]
atlas = ExtResource("3_mm24y")
region = Rect2(3200, 0, 640, 640)

[sub_resource type="AtlasTexture" id="AtlasTexture_7x70d"]
atlas = ExtResource("3_mm24y")
region = Rect2(3840, 0, 640, 640)

[sub_resource type="AtlasTexture" id="AtlasTexture_xypvy"]
atlas = ExtResource("3_mm24y")
region = Rect2(4480, 0, 640, 640)

[sub_resource type="AtlasTexture" id="AtlasTexture_ol7um"]
atlas = ExtResource("3_mm24y")
region = Rect2(5120, 0, 640, 640)

[sub_resource type="AtlasTexture" id="AtlasTexture_fyifi"]
atlas = ExtResource("3_mm24y")
region = Rect2(5760, 0, 640, 640)

[sub_resource type="AtlasTexture" id="AtlasTexture_cjd3i"]
atlas = ExtResource("3_mm24y")
region = Rect2(6400, 0, 640, 640)

[sub_resource type="AtlasTexture" id="AtlasTexture_oo58l"]
atlas = ExtResource("3_mm24y")
region = Rect2(7040, 0, 640, 640)

[sub_resource type="AtlasTexture" id="AtlasTexture_o6edt"]
atlas = ExtResource("1_okksx")
region = Rect2(7040, 0, 640, 640)

[sub_resource type="AtlasTexture" id="AtlasTexture_g8mq7"]
atlas = ExtResource("1_okksx")
region = Rect2(0, 0, 640, 640)

[sub_resource type="AtlasTexture" id="AtlasTexture_7g0cq"]
atlas = ExtResource("1_okksx")
region = Rect2(640, 0, 640, 640)

[sub_resource type="AtlasTexture" id="AtlasTexture_r68o3"]
atlas = ExtResource("1_okksx")
region = Rect2(1280, 0, 640, 640)

[sub_resource type="AtlasTexture" id="AtlasTexture_qn4ta"]
atlas = ExtResource("1_okksx")
region = Rect2(1920, 0, 640, 640)

[sub_resource type="AtlasTexture" id="AtlasTexture_kgfux"]
atlas = ExtResource("1_okksx")
region = Rect2(2560, 0, 640, 640)

[sub_resource type="AtlasTexture" id="AtlasTexture_lns8u"]
atlas = ExtResource("1_okksx")
region = Rect2(3200, 0, 640, 640)

[sub_resource type="AtlasTexture" id="AtlasTexture_1nl6u"]
atlas = ExtResource("1_okksx")
region = Rect2(4480, 0, 640, 640)

[sub_resource type="AtlasTexture" id="AtlasTexture_ubbwy"]
atlas = ExtResource("1_okksx")
region = Rect2(5120, 0, 640, 640)

[sub_resource type="AtlasTexture" id="AtlasTexture_ofxgp"]
atlas = ExtResource("1_okksx")
region = Rect2(5760, 0, 640, 640)

[sub_resource type="AtlasTexture" id="AtlasTexture_sun5t"]
atlas = ExtResource("1_okksx")
region = Rect2(6400, 0, 640, 640)

[sub_resource type="SpriteFrames" id="SpriteFrames_lhb2p"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_k5an6")
}],
"loop": true,
"name": &"die",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_5b1hv")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_was4l")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_boqfy")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_hl7wv")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_g8hda")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_v1o64")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_otamc")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_hr2sv")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_uja7o")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_t6e3a")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_vvabb")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_a8h2u")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_g866q")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_m5wmi")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_gfnlr")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_pn54w")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_axq03")
}],
"loop": false,
"name": &"explode",
"speed": 16.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_jxevx")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_tu12j")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_hxr28")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_pnay4")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_8bjsl")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_h68ko")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_k7lra")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_7x70d")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_xypvy")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ol7um")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_fyifi")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_cjd3i")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_oo58l")
}],
"loop": true,
"name": &"idle",
"speed": 18.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_o6edt")
}],
"loop": true,
"name": &"jump",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_g8mq7")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_7g0cq")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_r68o3")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_qn4ta")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_kgfux")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_lns8u")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_1nl6u")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ubbwy")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ofxgp")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_sun5t")
}],
"loop": true,
"name": &"run",
"speed": 12.0
}]

[sub_resource type="RectangleShape2D" id="RectangleShape2D_lg0ke"]
size = Vector2(20, 28)

[sub_resource type="RectangleShape2D" id="RectangleShape2D_5uytk"]
size = Vector2(14.5, 20)

[node name="Player" type="CharacterBody2D"]
scale = Vector2(0.8, 0.8)
collision_layer = 2
floor_constant_speed = true
floor_max_angle = 1.22173
floor_snap_length = 5.0
script = SubResource("GDScript_bm4dc")
movement_data = ExtResource("1_jkio6")

[node name="Camera2D" type="Camera2D" parent="."]
offset = Vector2(0, -30)
position_smoothing_enabled = true

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
position = Vector2(0, -20)
scale = Vector2(0.1, 0.099)
sprite_frames = SubResource("SpriteFrames_lhb2p")
animation = &"explode"

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(0, -15)
shape = SubResource("RectangleShape2D_lg0ke")

[node name="CoyoteJumpTimer" type="Timer" parent="."]
wait_time = 0.2
one_shot = true

[node name="HazardDetector" type="Area2D" parent="."]
collision_layer = 0
collision_mask = 4

[node name="CollisionShape2D" type="CollisionShape2D" parent="HazardDetector"]
position = Vector2(0, -15)
shape = SubResource("RectangleShape2D_5uytk")
debug_color = Color(0, 0.623833, 0.186367, 0.42)

[node name="DeathTimer" type="Timer" parent="."]

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="Bombtimer" parent="CanvasLayer" instance=ExtResource("5_tpnx8")]

[node name="Timer" type="Timer" parent="CanvasLayer/Bombtimer"]
wait_time = 10.0
one_shot = true

[node name="Label" type="Label" parent="CanvasLayer/Bombtimer"]
modulate = Color(1, 0, 0, 1)
self_modulate = Color(1, 0, 0, 1)
anchors_preset = 13
anchor_left = 0.5
anchor_right = 0.5
anchor_bottom = 1.0
offset_left = -27.5
offset_right = 27.5
grow_horizontal = 2
grow_vertical = 2
theme_override_font_sizes/font_size = 30
horizontal_alignment = 1

[connection signal="animation_finished" from="AnimatedSprite2D" to="." method="_on_animated_sprite_2d_animation_finished"]
[connection signal="area_entered" from="HazardDetector" to="." method="_on_hazard_detector_area_entered"]
[connection signal="timeout" from="CanvasLayer/Bombtimer/Timer" to="." method="_on_timer_timeout"]
